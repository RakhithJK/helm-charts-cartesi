---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "validator.fullname" . }}
  labels: {{- include "validator.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "validator.selectorLabels" . | nindent 6 }}
      rollups.cartesi.io/component: validator
  template:
    metadata:
      {{- with .Values.validator.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "validator.selectorLabels" . | nindent 8 }}
        rollups.cartesi.io/component: validator
    spec:
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "validator.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        {{- if .Values.validator.initContainers }}
        {{- include "tplvalues.render" ( dict "value" .Values.validator.initContainers "context" $ ) | nindent 8 }}
        {{- end }}
      containers:
        - name: rollups-dispatcher
          image: {{ include "dispatcher.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            {{- toYaml .Values.validator.dispatcher.resources | nindent 12 }}
          args:
            - "--dapp-contract-address"
            - {{ required "A valid .Values.dapp.contractAddress is required" .Values.dapp.contractAddress | lower | quote }}
            - "--logic-config-path"
            - "/opt/cartesi/share/config/logic-config.toml"
            - "--sf-config"
            - "/opt/cartesi/share/config/sf-config.toml"
            - "--bs-config"
            - "/opt/cartesi/share/config/bs-config.toml"
            - "--tm-config"
            - "/opt/cartesi/share/config/tm-config.toml"
            - "--chain-id"
            - {{ include "dapp.chainID" . | toString | quote }}
          env:
            - name: RUST_LOG
              value: {{ .Values.validator.dispatcher.logLevel }}
            - name: MNEMONIC_FILE
              value: /var/run/secrets/mnemonic/MNEMONIC
          volumeMounts:
            - name: {{ include "validator.fullname" . }}-config-volume
              mountPath: /opt/cartesi/share/config/
            - name: {{ include "validator.fullname" . }}-mnemonic
              mountPath: /var/run/secrets/mnemonic
              readOnly: true

        - name: state-server
          image: {{ include "stateServer.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            {{- toYaml .Values.validator.stateServer.resources | nindent 12 }}
          args:
            - "--sf-config"
            - "/opt/cartesi/share/config/sf-config.toml"
            - "--url"
            - {{ required "A valid .Values.dapp.httpProvider is required" .Values.dapp.httpProvider | quote }}
            - "--ws-url"
            - {{ required "A valid .Values.dapp.wsProvider is required" .Values.dapp.wsProvider | quote }}
            - "rollups"
          env:
            - name: RUST_LOG
              value: {{ .Values.validator.stateServer.logLevel }}
          ports:
            - containerPort: 50051
          volumeMounts:
            - name: {{ include "validator.fullname" . }}-config-volume
              mountPath: /opt/cartesi/share/config/

        - name: server-manager
          image: {{ required "A valid .Values.dapp.image is required" .Values.dapp.image }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            {{- toYaml .Values.validator.serverManager.resources | nindent 12 }}
          ports:
            - containerPort: 5001

        - name: rollups-indexer
          image: {{ include "indexer.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            {{- toYaml .Values.validator.indexer.resources | nindent 12 }}
          args:
            - "--indexer-config-path"
            - "/opt/cartesi/share/config/indexer-config.toml"
          livenessProbe:
            httpGet:
              path: /healthz
              port: 80
            initialDelaySeconds: 3
          env:
            - name: RUST_LOG
              value: {{ .Values.validator.indexer.logLevel }}
            - name: POSTGRES_PASSWORD_FILE
              value: /var/run/secrets/postgres/PASSWORD
            - name: POSTGRES_MIGRATION_FOLDER
              value: /usr/local/bin/migrations/
          {{- if .Values.postgresOperator.enabled }}
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: secret-{{ include "validator.fullname" . }}-indexer
                  key: ROLE
                  optional: false
            - name: POSTGRES_HOSTNAME
              valueFrom:
                secretKeyRef:
                  name: secret-{{ include "validator.fullname" . }}-indexer
                  key: HOST
                  optional: false
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: secret-{{ include "validator.fullname" . }}-indexer
                  key: DATABASE_NAME
                  optional: false
          {{ else }}
          envFrom:
            - configMapRef:
                name: {{ include "validator.fullname" . }}-database-config
          {{ end -}}
          volumeMounts:
            - name: {{ include "validator.fullname" . }}-config-volume
              mountPath: /opt/cartesi/share/config/
            - name: {{ include "validator.fullname" . }}-postgres
              mountPath: /var/run/secrets/postgres
              readOnly: true

      volumes:
        - name: {{ include "validator.fullname" . }}-config-volume
          configMap:
            name: {{ include "validator.fullname" . }}-rollups-config-files
        - name: {{ include "validator.fullname" . }}-mnemonic
          secret:
            secretName: {{ include "validator.fullname" . }}-mnemonic
        - name: {{ include "validator.fullname" . }}-postgres
          {{ if .Values.postgresOperator.enabled }}
          secret:
            secretName: secret-{{ include "validator.fullname" . }}-indexer
            items:
              - key: PASSWORD
                path: PASSWORD
          {{- else -}}
          secret:
            secretName: {{ include "validator.fullname" . }}-postgres
          {{- end -}}
      {{- with .Values.validator.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "validator.fullname" . }}-endpoints
  labels: {{- include "validator.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.endpoints.replicaCount }}
  selector:
    matchLabels:
      {{- include "validator.selectorLabels" . | nindent 6 }}
      rollups.cartesi.io/component: endpoints
  template:
    metadata:
      labels:
        {{- include "validator.selectorLabels" . | nindent 8 }}
        rollups.cartesi.io/component: endpoints
    spec:
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "validator.serviceAccountName" . }}
      initContainers:
        {{- if .Values.endpoints.initContainers }}
        {{- include "tplvalues.render" ( dict "value" .Values.endpoints.initContainers "context" $ ) | nindent 8 }}
        {{- end }}
      containers:
        - name: rollups-inspect-server
          image: {{ include "inspectServer.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            {{- toYaml .Values.endpoints.inspectServer.resources | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: 5005
            initialDelaySeconds: 3
          args:
            - "--inspect-server-address"
            - "0.0.0.0:5005"
            - "--server-manager-address"
            - "{{ include "validator.fullname" . }}-server-manager:5001"
            - "--session-id"
            - "default_rollups_id"
          env:
            - name: RUST_LOG
              value: {{ .Values.endpoints.inspectServer.logLevel }}
          ports:
            - containerPort: 5005
        - name: query-server
          image: {{ include "queryServer.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            {{- toYaml .Values.endpoints.queryServer.resources | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: 4000
            initialDelaySeconds: 3
          env:
            - name: RUST_LOG
              value: {{ .Values.endpoints.queryServer.logLevel }}
            - name: GRAPHQL_HOST
              value: "0.0.0.0"
            - name: GRAPHQL_PORT
              value: "4000"
            - name: POSTGRES_PASSWORD_FILE
              value: /var/run/secrets/postgres/PASSWORD
          {{ if .Values.postgresOperator.enabled }}
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: secret-{{ include "validator.fullname" . }}-query-server
                  key: ROLE
                  optional: false
            - name: POSTGRES_HOSTNAME
              valueFrom:
                secretKeyRef:
                  name: secret-{{ include "validator.fullname" . }}-query-server
                  key: HOST
                  optional: false
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: secret-{{ include "validator.fullname" . }}-query-server
                  key: DATABASE_NAME
                  optional: false
          {{ else }}
          envFrom:
            - configMapRef:
                name: {{ include "validator.fullname" . }}-database-config
          {{ end }}
          volumeMounts:
            - name: {{ include "validator.fullname" . }}-postgres
              mountPath: /var/run/secrets/postgres
              readOnly: true
          ports:
            - containerPort: 4000
      {{- with .Values.endpoints.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.endpoints.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.endpoints.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      volumes:
        - name: {{ include "validator.fullname" . }}-postgres
        {{ if .Values.postgresOperator.enabled }}
          secret:
            secretName: secret-{{ include "validator.fullname" . }}-query-server 
            items:
              - key: PASSWORD
                path: PASSWORD
        {{ else }}
          secret:
            secretName: {{ include "validator.fullname" . }}-postgres
        {{ end }}
